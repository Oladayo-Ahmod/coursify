service: () -> {
    addCourse: (record {title:text; duration:nat64; prerequisites:vec text; description:text; skillLevel:text; price:nat64}) -> (variant {Ok:text; Err:variant {PaymentFailed:text; InvalidPayload:text; NotFound:text; PaymentCompleted:text}});
    buyCourse: (text) -> (variant {Ok:text; Err:variant {PaymentFailed:text; InvalidPayload:text; NotFound:text; PaymentCompleted:text}});
    enrollCourse: (text) -> (variant {Ok:text; Err:variant {PaymentFailed:text; InvalidPayload:text; NotFound:text; PaymentCompleted:text}});
    getCourse: (text) -> (variant {Ok:record {id:text; title:text; duration:nat64; students:vec principal; prerequisites:vec text; instructor:principal; description:text; skillLevel:text; price:nat64}; Err:variant {PaymentFailed:text; InvalidPayload:text; NotFound:text; PaymentCompleted:text}}) query;
    getCourses: () -> (vec record {id:text; title:text; duration:nat64; students:vec principal; prerequisites:vec text; instructor:principal; description:text; skillLevel:text; price:nat64}) query;
    getUserCreatedCourses: () -> (variant {Ok:vec record {id:text; title:text; duration:nat64; students:vec principal; prerequisites:vec text; instructor:principal; description:text; skillLevel:text; price:nat64}; Err:variant {PaymentFailed:text; InvalidPayload:text; NotFound:text; PaymentCompleted:text}}) query;
    getUserEnrolledCourses: () -> (variant {Ok:vec record {id:text; title:text; duration:nat64; students:vec principal; prerequisites:vec text; instructor:principal; description:text; skillLevel:text; price:nat64}; Err:variant {PaymentFailed:text; InvalidPayload:text; NotFound:text; PaymentCompleted:text}}) query;
    unenrollCourse: (text) -> (variant {Ok:text; Err:variant {PaymentFailed:text; InvalidPayload:text; NotFound:text; PaymentCompleted:text}});
}
